{% extends "FulldonIntersaBundle::coque_intersa.html.twig" %}
    {% block stylesheets %}
        {{ parent() }}
        {% stylesheets '../app/Resources/Public/css/global/jquery-ui/jquery-ui.css' %}
        <link rel="stylesheet" type="text/css" charset="UTF-8" media="all" href="{{ asset_url }}"/>
        {% endstylesheets %}
        <style>
            .ui-autocomplete-input, .ui-menu, .ui-menu-item {  z-index: 2006; }
        </style>
    {% endblock %}
    {% block coque_intersa %}
<div class="breadcrumbs" id="breadcrumbs">
<ol class="breadcrumb">
    <li><a href="#">Accueil</a></li>
    <li><a href="#">Saisie en série</a></li>
    <li><a href="#">Saisie du lot</a></li>
</ol>
</div>
<div class="page-content">

        {% set cheques = { 'BC':'BC','CS':'CS' } %}
        {% set pa = { 'PA':'PA' } %}
        {% set virement = { 'VIREMENT':'VIREMENT' } %}
        {% set mix = { 'MIX':'MIX' } %}

        <div class="col-md-12">
        <ol class="breadcrumb">
            <li><a href="{{ path('fulldon_intersa_homepage') }}">Accueil</a></li>
            <li class="active">Saisie en série </li>
        </ol>
        <h3 style="margin-top:5px;" class="couleur-intersa" >Gestion des transactions : Lot</h3>
        <hr />

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3 class="panel-title">Lot par type de paiement
                            <div class="pull-right"><span class="label label-primary"> Séquence : {{ sequence }}</span></div></h3>
                    </div>
                    <div class="panel-body">

                        <div class="panel-group" id="accordion">
                            {% if data['image'][0] is defined %} <img src="{{ path('assets_img',{'token': data['image'][0]}) }}" width="820" />{% endif %}
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <a href="#" data-toggle="modal" data-target="#myModal2" class="btn btn-primary col-md-12 " style="text-align: center"><span class="glyphicon glyphicon-edit"></span> Saisir le don </a>

            </div>

        </div> <!-- /container -->
        <div class="modal fade" id="myModal" tabindex="-2"  role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">Signalisation d'anomalies</h4>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-danger">Si vous acceptez de signaler cette séquence #{{ sequence }} comme anomalie, vous allez continuer la saisie et l'anomalie sera enregistrée pour un traitement ultérieur.</div>
                        <form action="{{ path('intersa_saisie_ano')}}" method="post" class="form-group" {{ form_enctype(anoform) }}>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group ">
                                        <label for="inputEmail3" class="control-label">{{ form_label(anoform.lot, "Lot :") }}</label>
                                        <div >
                                            {# Affichage des erreurs pour ce champ précis. #}
                                            {{ form_errors(anoform.lot) }}

                                            {# Génération de l'input. #}
                                            {{ form_widget(anoform.lot, {'attr': {'class': 'task_field form-control', 'id':'anolot','value':lot, 'readonly':'readonly', 'tabindex':'-1'} }) }}
                                        </div>
                                    </div>
                                    <div class="form-group ">
                                        <label for="inputEmail3" class="control-label">{{ form_label(anoform.sequence, "Séquence :") }}</label>
                                        <div >
                                            {# Affichage des erreurs pour ce champ précis. #}
                                            {{ form_errors(anoform.sequence) }}

                                            {# Génération de l'input. #}
                                            {{ form_widget(anoform.sequence, {'attr': {'class': 'task_field form-control', 'id':'anosequence','value':sequence, 'readonly':'readonly', 'tabindex':'-1'} }) }}
                                        </div>
                                    </div>
                                    <div class="form-group ">
                                        <label for="inputEmail3" class="control-label">{{ form_label(anoform.commentaire, "Commentaire :") }}</label>
                                        <div >
                                            {# Affichage des erreurs pour ce champ précis. #}
                                            {{ form_errors(anoform.commentaire) }}

                                            {# Génération de l'input. #}
                                            {{ form_widget(anoform.commentaire, {'attr': {'class': 'task_field form-control', 'id':'anocomment'} }) }}
                                        </div>
                                    </div>
                                    <div class="form-group ">
                                        <div >
                                            {# Affichage des erreurs pour ce champ précis. #}
                                            {{ form_errors(anoform.type) }}

                                            {# Génération de l'input. #}
                                            {{ form_widget(anoform.type, {'attr': {'class': 'task_field form-control', 'id':'anotype','value':type} }) }}
                                        </div>
                                    </div>
                                    <div class="pull-right">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Annuler</button>
                                        <input type="submit" class="btn btn-danger" value ="Confirmer l'anomalie"/>
                                    </div>
                                </div>
                            </div>
                            {{ form_rest(anoform) }}
                        </form>

                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" >
        <div class="modal-dialog" style="top:-10px;right:0px;width:100%;height:100%">
        <div class="modal-content" >
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Saisie de la séquence #{{ sequence }} </h4>
            <a class="pull-right btn btn-danger" data-dismiss="modal" aria-hidden="true"  data-toggle="modal" data-target="#myModal" >Signaler une anomalie</a>
        </div>
        <div class="modal-body">
        <div class="row">
        <div class="col-md-6">
            <div id="proposition" style="position: absolute;z-index: 100;background-color: #fff;color:#000;opacity:0.70;height: 100%;width:98%;display:none;">
                <div class="row">
                    <div class="col-md-12">
                        <center>
                            <img id="load_data" src="{{ asset('img/ajax-loader.gif') }}" />
                        </center>
                    </div>
                </div>
            </div>
            {% for flashMessage in app.session.flashbag.get('info') %}
                <div class="alert alert-success">
                    {{ flashMessage }}
                </div>
            {% endfor %}
            {% for flashMessage in app.session.flashbag.get('warning') %}
                <div class="alert alert-warning">
                    {{ flashMessage }}
                </div>
            {% endfor %}
            {% if type in pa|keys or type in virement|keys %}
                {%  if data['image'][0] is defined %} <img src="{{ path('assets_img',{'token': data['image'][0]}) }}" style="max-height: 900px;" />{% endif %}
            {% else %}
                {% for img in data['image'] %}
                    {%  if img is defined %} <img src="{{ path('assets_img',{'token': img}) }}" style="width: 100%" />{% endif %}
                {% endfor %}
            {% endif %}
        </div>
        <div class="col-md-6">
        <br />

        <form  method="post" onsubmit="submit_donateur();return false;">
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="inputEmail3" class="control-label">Numéro du donateur</label>
                    <div id="donateur_id_block" >
                        <input type="text" class="task_field form-control" name="id_donateur" id="value_donateur" {% if champs['id'] is defined  %}value="{{ champs['id'] }}"{% endif %} />
                    </div>
                </div>
            </div>
        </form>
        <!-- Tab panes -->
        <form action="{{ path('intersa_saisie_serie_lot',{'type':type,'nom':lot})}}" method="post" class="form-group" {{ form_enctype(form) }}>
        <input type="hidden" name="num_donateur[]" id="hidden_id_donateur" {% if champs['id'] is not null  %}value="{{ champs['id'] }}"{% endif %}   {% if data['donateur'] is defined  %} value="{{ data['donateur'] }}" {% endif %} />
        <div class="row">
        <div class="col-md-8">
        <div id="proposition_eclate" style="position: absolute; top: -80px;z-index: 100;background-color: #fff;color:#000;opacity:0.95;height: 120%;width:98%;display:none;">
            <div class="row">
                <div class="col-md-12">
                    <div class="pull-right"><a href="{{ path('intersa_donateur_add') }}" class="btn btn-xs btn-success" target="_blank"><span class="glyphicon glyphicon-plus"></span> Ajouter un nouveau donateur</a>   <a href="#" onclick="close_proposition(2)" class="btn btn-xs btn-danger"><span class="glyphicon glyphicon-remove"></span> Fermer  </a> </div>
                    <br />
                    <hr />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label  class=" control-label">Nom<span class="required-input" > * </span></label>
                    <div>
                        <input type="text" name="nom_eclate_search" class="task_field form-control" id="nom_eclate_search" />
                    </div>
                </div>

                <div class="col-md-6">
                    <label  class=" control-label">Prenom<span class="required-input" > * </span></label>
                    <div>
                        <input type="text" name="prenom_eclate_search" class="task_field form-control" id="prenom_eclate_search" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <br />
                    <a href="#" onclick="get_eclate_propostion()" class="col-md-12 btn btn-primary"><span class="glyphicon glyphicon-search"></span> Rechercher</a>
                </div>
            </div>
            <hr />
            <div class="col-md-12" id="result_eclate">
                <center>
                    <img id="load_data" src="{{ asset('img/ajax-loader.gif') }}" />
                </center>
            </div>
        </div>
        <div id="donateur_info_block">
        <div class="row">
            <div class="form-group col-md-6">
                <label for="inputEmail3" class="control-label">{{ form_label(form.civilite, "Civilité") }}</label>
                <div >
                    {# Affichage des erreurs pour ce champ précis. #}
                    {{ form_errors(form.civilite) }}

                    {# Génération de l'input. #}
                    {{ form_widget(form.civilite, {'attr': {'class': 'task_field form-control', 'id':'civilite'} }) }}
                </div>
            </div>
            <div class="form-group col-md-6">
                <label for="inputEmail3" class=" control-label">{{ form_label(form.nom, "Nom") }}<span class="required-input" > * </span></label>
                <div >
                    {% if form.nom.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.nom) }}</label>
                            {{ form_widget(form.nom, {'attr': {'class': 'task_field form-control', 'id':'inputError', 'placeholder':'Nom', 'value':data['nom'] } }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.nom, {'attr': {'class': 'task_field form-control', 'id':'nom', 'placeholder':'Nom' ,'value':data['nom'] }}) }}
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="row">

            <div class="form-group col-md-6">
                <label for="inputEmail3" class="control-label">{{ form_label(form.prenom, "Prénom") }}<span class="required-input" > * </span></label>
                <div >
                    {% if form.prenom.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.prenom) }}</label>
                            {{ form_widget(form.prenom, {'attr': {'class': 'task_field form-control', 'id':'prenom', 'placeholder':'Prénom','value':data['prenom'] } }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.prenom, {'attr': {'class': 'task_field form-control', 'id':'prenom', 'placeholder':'Prénom','value':data['prenom'] } }) }}
                    {% endif %}
                </div>
            </div>
            <div class="form-group col-md-6">
                <label for="inputEmail3" class=" control-label">{{ form_label(form.isopays, "Pays") }}</label>
                <div >
                    {# Affichage des erreurs pour ce champ précis. #}
                    {{ form_errors(form.isopays) }}

                    {# Génération de l'input. #}
                    {{ form_widget(form.isopays, {'attr': { 'class': 'task_field form-control', 'id':'pays'} }) }}
                </div>
            </div>


        </div>
        <div class="row">

            <div class="form-group col-md-6">
                <label for="inputEmail3" class=" control-label">{{ form_label(form.zipcode, "Code postal ") }}</label>
                <div >
                    {% if form.zipcode.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.zipcode) }}</label>
                            {{ form_widget(form.zipcode, {'attr': { 'class': 'task_field form-control', 'id':'codepostal','value':data['zipcode']} }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.zipcode, {'attr': { 'class': 'task_field form-control', 'id':'codepostal','value':data['zipcode']} }) }}
                    {% endif %}

                </div>
            </div>
            <div class="form-group col-md-6">
                <label for="inputEmail3" class=" control-label">{{ form_label(form.isoville, "Localité") }}</label>
                <div >
                    {# Affichage des erreurs pour ce champ précis. #}
                    {{ form_errors(form.isoville) }}

                    {# Génération de l'input. #}
                    {{ form_widget(form.isoville, {'attr': { 'class': 'task_field form-control', 'id':'ville'} }) }}
                </div>
            </div>

        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <label for="inputEmail3" class="control-label">{{ form_label(form.adresse3, "Numéro + libellé de la voie (rue,avenue...) ") }}</label>
                <div >
                    {% if form.adresse3.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.adresse3) }}</label>
                            {{ form_widget(form.adresse3, {'attr': { 'class': 'task_field form-control', 'id':'adresse3','value':data['adresse3']} }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.adresse3, {'attr': { 'class': 'task_field form-control', 'id':'adresse3','value':data['adresse3']} }) }}
                    {% endif %}
                </div>
            </div>
            <div class="form-group col-md-6">
                <label for="inputEmail3" class="control-label">{{ form_label(form.adresse1, "N° appartement ou boîte aux lettres - etage - couloir - escalier ") }}</label>
                <div>
                    {% if form.adresse1.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.adresse1) }}</label>
                            {{ form_widget(form.adresse1, {'attr': { 'class': 'task_field form-control', 'id':'adresse1','value':data['adresse1']} }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.adresse1, {'attr': { 'class': 'task_field form-control', 'id':'adresse1','value':data['adresse1']} }) }}
                    {% endif %}
                </div>
            </div>

        </div>
        <div class="row">

            <div class="form-group col-md-6">
                <label for="inputEmail3" class="control-label">{{ form_label(form.adresse2, "Entrée - bâtiment - immeuble - résidence ") }}</label>
                <div >
                    {% if form.adresse2.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.adresse2) }}</label>
                            {{ form_widget(form.adresse2, {'attr': { 'class': 'task_field form-control', 'id':'adresse2','value':data['adresse2']} }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.adresse2, {'attr': { 'class': 'task_field form-control', 'id':'adresse2','value':data['adresse2']} }) }}
                    {% endif %}
                </div>
            </div>
            <div class="form-group col-md-6">
                <label for="inputEmail3" class="control-label">{{ form_label(form.adresse4, "BP - Lieu dit ") }}</label>
                <div >
                    {% if form.adresse4.vars.errors|length %}
                        {# Affichage des erreurs pour ce champ précis. #}
                        <div class="form-group has-error">
                            <label class="control-label" for="inputError"> {{ form_errors(form.adresse4) }}</label>
                            {{ form_widget(form.adresse4, {'attr': { 'class': 'task_field form-control', 'id':'adresse4','value':data['adresse4']} }) }}
                        </div>
                    {% else %}
                        {# Génération de l'input. #}
                        {{ form_widget(form.adresse4, {'attr': { 'class': 'task_field form-control', 'id':'adresse4','value':data['adresse4']} }) }}
                    {% endif %}
                </div>
            </div>


        </div>




        <h5 class="couleur-intersa" >Autre informations (Optionnelles)<div class="pull-right"><a  class="btn btn-xs btn-default" style="border-radius: 0px;" id="btn-optional"><i class="fa fa-plus-square"></i>  Afficher le formulaire optionnel</a></div></h5>
        <hr />
        <br />
        <div id="optionals_fields" style="display:none !important;">
            <div class="row" >
                <div class="form-group col-md-6">
                    <label >{{ form_label(form.receptionMode, "Mode de communication") }}</label>
                    <div>
                        {% for field in form.receptionMode %}
                            <li style="list-style-type:none; ">
                                {{ form_widget(field, {'attr': { 'checked': 'checked'} }) }}
                                {{ form_label(field) }}
                            </li>
                        {% endfor %}
                    </div>
                </div>
                <div class="form-group col-md-6">
                    <label for="inputEmail3" class="control-label">{{ form_label(form.dateNaissance, "Date de naissance") }}</label>
                    <div >
                        {% if form.dateNaissance.vars.errors|length %}
                            {# Affichage des erreurs pour ce champ précis. #}
                            <div class="form-group has-error">
                                <label class="control-label" for="inputError"> {{ form_errors(form.date_naissance) }}</label>
                                {{ form_widget(form.dateNaissance, {'attr': { 'id':'dateNaissance', 'placeholder':'jj/mm/aaaa' } }) }}
                            </div>
                        {% else %}
                            {# Génération de l'input. #}
                            {{ form_widget(form.dateNaissance, {'attr': { 'id':'nom', 'placeholder':'jj/mm/aaaa' } }) }}
                        {% endif %}
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="telephoneMobile">{{ form_label(form.telephoneMobile, "Téléphone mobile") }}</label>
                    <div >
                        {# Affichage des erreurs pour ce champ précis. #}
                        {{ form_errors(form.telephoneMobile) }}

                        {# Génération de l'input. #}
                        {{ form_widget(form.telephoneMobile, {'attr': { 'class': 'task_field form-control', 'id':'telephoneMobile'} }) }}
                    </div>
                </div>
                <div class="form-group col-md-6">
                    <label for="telephone_fixe" >{{ form_label(form.telephoneFixe, "Téléphone fixe") }}</label>
                    <div >
                        {# Affichage des erreurs pour ce champ précis. #}
                        {{ form_errors(form.telephoneFixe) }}

                        {# Génération de l'input. #}
                        {{ form_widget(form.telephoneFixe, {'attr': { 'class': 'task_field form-control', 'id':'telephone_fixe'} }) }}
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label  class=" control-label col-sm-12">Le donateur peut recevoir les Reçus fiscaux ?</label>
                    <div class="col-sm-12">
                        <div class="radio-inline">
                            <label>
                                <input type="radio" name="allow_rf" id="allow_rf1" value="true" {% if data['allow_rf'] is defined  %}{% if  data['allow_rf'] == "true"  %}checked{% endif %}{% else %}checked{% endif %}>
                                Oui
                            </label>
                        </div>
                        <div class="radio-inline">
                            <label>
                                <input type="radio" name="allow_rf" id="allow_rf2" value="false" {% if data['allow_rf'] is defined  and  data['allow_rf'] == "false"  %}checked{% endif %}>
                                Non
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label for="inputEmail3" class="control-label">{{ form_label(form.email, "Email") }}</label>
                    <div >
                        {% if form.email.vars.errors|length %}
                            {# Affichage des erreurs pour ce champ précis. #}
                            <div class="form-group has-error">
                                <label class="control-label" for="inputError"> {{ form_errors(form.email) }}</label>
                                {{ form_widget(form.email, {'attr': { 'class': 'task_field form-control', 'id':'email'} }) }}
                            </div>
                        {% else %}
                            {# Génération de l'input. #}
                            {{ form_widget(form.email, {'attr': { 'class': 'task_field form-control', 'id':'email'} }) }}
                        {% endif %}
                    </div>
                </div>

            </div>

        </div>
        </div>
        </div>
        <div class="col-md-4">
        <h5 class="couleur-intersa">Coordonnées de paiement : <div class="pull-right"><a href="#" id="don_eclate" class="btn btn-xs btn-primary"><span class="glyphicon glyphicon-new-window"></span> Don éclaté</a> </div></h5>
        <hr />
        <div id="InputsOption">
            <input type="hidden" name="coll_don" value="1" />
        </div>
        <input type="hidden" name="id_don"  {% if data['don'] is defined %}value="{{ data['don'] }}"{% endif %} />
        <label for="montant"><label for="montant" class="required">Montant</label></label>{% if data['montant'] is defined %}<a style="font-size: 10px;" class="pull-right" href="#" tabindex="-1" onClick="enable_field('#montant');"> ( Modifier )</a>{% endif %}
        {% if  app.session.flashbag.has('error_montant_0')%}
            {# Affichage des erreurs pour ce champ précis. #}
            <div class="form-group has-error">
                <label class="control-label" for="inputError">
                    {% for flashMessage in app.session.flashbag.get('error_montant_0') %}
                        <li>{{ flashMessage }}</li>
                    {% endfor %}
                </label>
                <input type="text" id="montant" name="montant[]" required="required" placeholder="Montant (en Euros)" {% if champs['montant_0'] is  defined and champs['montant_0'] is not null  %}value="{{ champs['montant_0'] }}"{% endif %}class="task_field form-control" {% if data['montant'] is defined %}value="{{ data['montant'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
            </div>
        {% else %}
            <input type="text" id="montant" name="montant[]" required="required" placeholder="Montant (en Euros)" {% if champs['montant_0'] is  defined and champs['montant_0'] is not null  %}value="{{ champs['montant_0'] }}"{% endif %} class="task_field form-control" {% if data['montant'] is defined %}value="{{ data['montant'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
        {% endif %}
        <br />
        <label for="code_activite"><label for="code_activite" class="required">Code Activité</label></label>{% if data['cause'] is defined %}<a style="font-size: 10px;" class="pull-right" href="#" tabindex="-1" onClick="enable_field('#code_activite');"> ( Modifier )</a>{% endif %}
        {% if  app.session.flashbag.has('error_code_activite_0')%}
            {# Affichage des erreurs pour ce champ précis. #}
            <div class="form-group has-error">
                <label class="control-label" for="inputError">
                    {% for flashMessage in app.session.flashbag.get('error_code_activite_0') %}
                        <li>{{ flashMessage }}</li>
                    {% endfor %}
                </label>
                <input type="text" id="code_activite" name="code_activite[]" required="required" class="task_field form-control" {% if champs['code_activite_0'] is defined %}value="{{ champs['code_activite_0'] }}"{% endif %} {% if data['cause'] is defined %}value="{{ data['cause'].code }}" tabindex="-1" readonly{% endif %} autocomplete="off" >
            </div>
        {% else %}
            <input type="text" id="code_activite" name="code_activite[]" required="required" class="task_field form-control" {% if champs['code_activite_0'] is defined  %}value="{{ champs['code_activite_0'] }}"{% endif %} {% if data['cause'] is defined %}value="{{ data['cause'].code }}" tabindex="-1" readonly{% endif %} autocomplete="off">
        {% endif %}
        <br />
        <div id="InputsWrapper">
            {% if  champs['eclate'] is defined and champs['eclate']>1 %}
                {% for i in 1..champs['eclate']-1 %}
                    <div>
                        <a href="#" class="removeclass pull-right" tabindex="-1" ><span class="glyphicon glyphicon-remove"></span></a><br />

                        <label for="montant"><label for="montant" class="required">Montant</label></label><span class="pull-right label label-info" style="font-size: 10px;"> Eclaté</span>
                        {% if  app.session.flashbag.has('error_montant_'~i)%}
                            {# Affichage des erreurs pour ce champ précis. #}
                            <div class="form-group has-error">
                                <label class="control-label" for="inputError">
                                    {% for flashMessage in app.session.flashbag.get('error_montant_'~i) %}
                                        <li>{{ flashMessage }}</li>
                                    {% endfor %}
                                </label>
                                <input type="text" id="montant" name="montant[]" required="required" placeholder="Montant (en Euros)" {% if champs['montant_'~i] is defined and champs['montant_'~i] is not null  %}value="{{ champs['montant_'~i] }}"{% endif %}class="task_field form-control"  autocomplete="off">
                            </div>
                        {% else %}
                            <input type="text" id="montant" name="montant[]" required="required" placeholder="Montant (en Euros)" {% if champs['montant_'~i] is defined and  champs['montant_'~i] is not null  %}value="{{ champs['montant_'~i] }}"{% endif %} class="task_field form-control" autocomplete="off">
                        {% endif %}
                        <br />
                        <label for="code_activite"><label for="code_activite" class="required">Code Activité</label></label>
                        {% if  app.session.flashbag.has('error_code_activite_'~i)%}
                            {# Affichage des erreurs pour ce champ précis. #}
                            <div class="form-group has-error">
                                <label class="control-label" for="inputError">
                                    {% for flashMessage in app.session.flashbag.get('error_code_activite_'~i) %}
                                        <li>{{ flashMessage }}</li>
                                    {% endfor %}
                                </label>
                                <input type="text" id="code_activite" name="code_activite[]" required="required" class="task_field form-control" {% if champs['code_activite_'~i] is defined %}value="{{ champs['code_activite_'~i] }}"{% endif %} autocomplete="off" >
                            </div>
                        {% else %}
                            <input type="text" id="code_activite" name="code_activite[]" required="required" class="task_field form-control" {% if champs['code_activite_'~i] is defined  %}value="{{ champs['code_activite_'~i] }}"{% endif %} autocomplete="off">
                        {% endif %}

                        <br />
                    </div>
                {% endfor %}
            {% endif %}
        </div>
        {% if type in cheques|keys %}
            <label for="num_cheque"><label for="num_cheque" class="required">Numero du chèque</label> </label><a style="font-size: 10px;" class="pull-right" href="#" tabindex="-1" onClick="enable_field('#num_cheque');"> ( Modifier )</a>
            <input type="text" id="num_cheque" name="num_cheque" required="required" {% if data['chequenum'] is defined %}value="{{ data['chequenum'] }}" {% endif %} class="task_field form-control " tabindex="-1" readonly>
            <br />
            <h5 class="couleur-intersa">Autres (Optionnelles)</h5>
            <hr />
            <label for="num_cheque"><label for="date_cheque" class="required">Date du chèque</label></label>
            {% if  app.session.flashbag.has('error_date_cheque')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_date_cheque') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <input type="text" id="date_cheque" name="date_cheque" required="required"  placeholder="jj/mm/aaaa" class="task_field form-control " {% if champs['date_cheque'] is defined %}value="{{ champs['date_cheque'] }}"{% endif %} autocomplete="off">
                </div>
            {% else %}
                <input type="text" id="date_cheque" name="date_cheque" required="required"  placeholder="jj/mm/aaaa" class="task_field form-control " {% if champs['date_cheque'] is defined %}value="{{ champs['date_cheque'] }}"{% endif %} autocomplete="off">
            {% endif %}
            <br />
        {% endif %}
        {% if type in pa|keys %}
            <label for="bic"><label for="bic" class="required">BIC</label></label>{% if data['bic'] is defined %}<a style="font-size: 10px;" class="pull-right" href="#" tabindex="-1" onClick="enable_field('#bic');"> ( Modifier )</a>{% endif %}
            {% if  app.session.flashbag.has('error_bic')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_bic') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <input type="text" id="bic" name="bic" required="required"  placeholder="BIC" class="task_field form-control " {% if champs['bic'] is defined %}value="{{ champs['bic'] }}"{% endif %}{% if data['bic'] is defined %}value="{{ data['bic'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
                </div>
            {% else %}
                <input type="text" id="bic" name="bic" required="required"  placeholder="BIC" class="task_field form-control " {% if champs['bic'] is defined %}value="{{ champs['bic'] }}"{% endif %} {% if data['bic'] is defined %}value="{{ data['bic'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
            {% endif %}
            <br />
            <label for="iban"><label for="iban" class="required">IBAN</label></label>{% if data['iban'] is defined %}<a style="font-size: 10px;" class="pull-right" href="#" tabindex="-1" onClick="enable_field('#iban');"> ( Modifier )</a>{% endif %}
            {% if  app.session.flashbag.has('error_iban')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_iban') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <input type="text" id="iban" name="iban" required="required"  placeholder="IBAN" class="task_field form-control " {% if champs['iban'] is defined %}value="{{ champs['iban'] }}"{% endif %} {% if data['iban'] is defined %}value="{{ data['iban'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
                </div>
            {% else %}
                <input type="text" id="iban" name="iban" required="required"  placeholder="IBAN" class="task_field form-control " {% if champs['iban'] is defined %}value="{{ champs['iban'] }}"{% endif %} {% if data['iban'] is defined %}value="{{ data['iban'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
            {% endif %}
            <br />
            <label for="date_first_pa"><label for="date_first_pa" class="required">Date du premier prélevement</label></label>
            {% if  app.session.flashbag.has('error_date_first_pa')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_date_first_pa') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <input type="text" id="date_first_pa" name="date_first_pa" required="required"  placeholder="jj/mm/aaaa" class="task_field form-control " {% if champs['date_first_pa'] is defined %}value="{{ champs['date_first_pa'] }}"{% endif %} autocomplete="off">
                </div>
            {% else %}
                <input type="text" id="date_first_pa" name="date_first_pa" required="required"  placeholder="jj/mm/aaaa" class="task_field form-control " {% if champs['date_first_pa'] is defined %}value="{{ champs['date_first_pa'] }}"{% endif %} autocomplete="off">
            {% endif %}
            <br />
            <label for="date_fin_pa"><label for="date_fin_pa" class="required">Date du fin de prélevement</label></label>
            {% if  app.session.flashbag.has('error_date_fin_pa')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_date_fin_pa') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <input type="text" id="date_fin_pa" name="date_fin_pa"   placeholder="jj/mm/aaaa" class="task_field form-control " {% if champs['date_fin_pa'] is defined %}value="{{ champs['date_fin_pa']|date('d/m/Y') }}"{% endif %} autocomplete="off"  >
                </div>
            {% else %}
                <input type="text" id="date_fin_pa" name="date_fin_pa"   placeholder="jj/mm/aaaa" class="task_field form-control " {% if champs['date_fin_pa'] is defined %}value="{{ champs['date_fin_pa']|date('d/m/Y') }}"{% endif %} autocomplete="off"  >
            {% endif %}
            <br />
            <label for="periodicite"><label for="periodicite" class="required">Périodicité</label></label>
            {% if  app.session.flashbag.has('error_periodicite')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_periodicite') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <SELECT id="periodicite" name="periodicite" required="required" class="task_field form-control " {% if data['periodicite'] is defined %} tabindex="-1" readonly{% endif %}>
                        {% for periode in periodes %}
                            <option value="{{ periode.id }}" {% if champs['periodicite'] is defined and champs['periodicite']== periode.id %}selected="selected"{% endif %} {% if data['periodicite'] is defined and data['periodicite']== periode.id %}selected="selected" {% endif %} >{{ periode.name }}</option>
                        {% endfor %}
                    </SELECT>
                </div>
            {% else %}
                <SELECT id="periodicite" name="periodicite" required="required" class="task_field form-control " {% if data['periodicite'] is defined %} tabindex="-1" readonly{% endif %}>
                    {% for periode in periodes %}
                        <option value="{{ periode.id }}" {% if champs['periodicite'] is defined and champs['periodicite']== periode.id %}selected="selected"{% endif %} {% if data['periodicite'] is defined and data['periodicite']== periode.id %}selected="selected" {% endif %} >{{ periode.name }}</option>
                    {% endfor %}
                </SELECT>
            {% endif %}
            <br />
        {% endif %}
        {% if type in cheques|keys  or type in pa|keys or type in virement|keys %}
            <label for="nom_banque"><label for="nom_banque" class="required">Nom de la banque</label></label>
            {% if  app.session.flashbag.has('error_nom_banque')%}
                {# Affichage des erreurs pour ce champ précis. #}
                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_nom_banque') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <input type="text" id="nom_banque" name="nom_banque" required="required" class="task_field form-control" {% if champs['nom_banque'] is defined and champs['nom_banque'] is not null %}value="{{ champs['nom_banque'] }}"{% endif %} {% if data['nom_banque'] is defined %}value="{{ data['nom_banque'] }}" tabindex="-1" readonly{% endif %} autocomplete="off">
                </div>
            {% else %}
                <input type="text" id="nom_banque" name="nom_banque" required="required" class="task_field form-control" {% if champs['nom_banque'] is defined and champs['nom_banque'] is not null  %}value="{{ champs['nom_banque'] }}"{% endif %} {% if data['nom_banque'] is defined %}value="{{ data['nom_banque'] }}" tabindex="-1" readonly {% endif %} autocomplete="off">
            {% endif %}
        {% endif %}
        {% if type in mix|keys   %}
            <label for="choix_type"><label for="choix_type" class="required">Choix du type</label></label>
            {% if  app.session.flashbag.has('error_choix_type')%}

                <div class="form-group has-error">
                    <label class="control-label" for="inputError">
                        {% for flashMessage in app.session.flashbag.get('error_choix_type') %}
                            <li>{{ flashMessage }}</li>
                        {% endfor %}
                    </label>
                    <select name="choice_type" id="choice_type" >
                        <option value="ces" {% if champs['choice_type'] is defined and champs['choice_type'] == 'ces' %} selected {% endif %} {% if data['choice_type'] is defined and data['choice_type'] == 'ces'%} selected="selected" {% endif %}>Espèce</option>
                        <option value="cbc" {% if champs['choice_type'] is defined and champs['choice_type'] == 'cbc' %} selected {% endif %} {% if data['choice_type'] is defined and champs['choice_type'] == 'cbc'%} selected="selected" {% endif %} >Bulletin chèque</option>
                    </select>

                </div>
            {% else %}
                <select name="choice_type" id="choice_type" >
                    <option value="ces" {% if champs['choice_type'] is defined and champs['choice_type'] == 'ces' %} selected {% endif %} {% if data['choice_type'] is defined and data['choice_type'] == 'ces'%} selected="selected" {% endif %}>Espèce</option>
                    <option value="cbc" {% if champs['choice_type'] is defined and champs['choice_type'] == 'cbc' %} selected {% endif %} {% if data['choice_type'] is defined and champs['choice_type'] == 'cbc'%} selected="selected" {% endif %} >Bulletin chèque</option>
                </select>
            {% endif %}
        {% endif %}
        </div>
        </div>
        {{ form_rest(form) }}
        <center> <input type="submit" class="btn btn-primary" value="Valider la saisie"/></center>
        </form>
        </div>
        </div>
        </div>
        </div>
        </div>
        </div>
        </div>
</div>
    {% endblock %}
    {% block javascripts %}
        {{ parent() }}

        <script>
        $('#value_donateur').focus();

        {% if champs['id'] is defined  %}checkdonateur('{{ champs['id'] }}');{% endif %}
        {% if data['donateur'] is defined  %}checkdonateur('{{ data['donateur'] }}');{% endif %}
        $('#myModal2').modal('show');

        function checkdonateur(id) {
            $.ajax({
                url: "/intersa/donateur/ajax/exists/id/"+id ,
                beforeSend: function( xhr ) {
                    ;
                }
            })
                    .done(function( data ) {
                        if(data.length != 0) {
                            $('#donateur_info_block').html(data);
                            $('#montant').focus();
                        } else {
                            alert('le donateur selectionné n\'existe pas');
                        }

                    });
        }
        $('#verif_donateur').on('click', function(){
            checkdonateur($('#value_donateur').val());

        });
        function submit_donateur(){
            checkdonateur($('#value_donateur').val());
            $('#hidden_id_donateur').attr('value',$('#value_donateur').val());
        }

        function enable_field(myvar) {
            $(myvar).removeAttr('readonly');

        }
        function checkdonateur_byname(nom, prenom) {
            $.ajax({
                url: "/intersa/donateur/ajax/exists/nom/"+nom+"/prenom/"+prenom ,
                beforeSend: function( xhr ) {
                    ;
                }
            })
                    .done(function( data ) {
                        if(data.length != 0) {
                            if(typeof curdonateur == 'undefined' || curdonateur == null) {

                                $('#proposition').css('opacity',0.80);
                                $('#proposition').html('<div class="pull-right"><a href="#" onclick="close_proposition(1)" class="btn btn-xs btn-danger"><span class="glyphicon glyphicon-remove"></span> Ignorer les propositions </a> </div>');
                                $('#proposition').append(data);
                            } else {
                                $('#result_eclate').html(data);
                            }

                        } else {
                            if(typeof curdonateur == 'undefined' || curdonateur == null) {
                                $('#proposition').hide();
                            } else {
                                $('#result_eclate').html('Aucun donateur trouvé !');
                            }
                        }

                    });
        }
        var timeoutReference;
        $(document).ready(function() {
            $('#value_donateur').focus();
            $('input#fulldon_donateurbundle_saisietype_prenom').keypress(function() {
                var el = this; // copy of this object for further usage

                if (timeoutReference) clearTimeout(timeoutReference);
                timeoutReference = setTimeout(function() {
                    doneTyping.call(el);
                }, 3000);
            });
            $('input#fulldon_donateurbundle_saisietype_prenom').blur(function(){
                doneTyping.call(this);
            });
        });
        $(document).ready(function() {
            $('input#fulldon_donateurbundle_saisietype_nom').keypress(function() {
                var el = this; // copy of this object for further usage

                if (timeoutReference) clearTimeout(timeoutReference);
                timeoutReference = setTimeout(function() {
                    doneTyping.call(el);
                }, 3000);
            });
            $('input#fulldon_donateurbundle_saisietype_nom').blur(function(){
                doneTyping.call(this);
            });
        });
        function doneTyping(){
            // we only want to execute if a timer is pending
            if (!timeoutReference){
                return;
            }
            // reset the timeout then continue on with the code
            timeoutReference = null;

            //
            // Code to execute here
            //
            var nom = $('#fulldon_donateurbundle_saisietype_nom').val();
            var prenom = $('#fulldon_donateurbundle_saisietype_prenom').val();
            if(nom.length != 0 || prenom.length !=0) {
                $('#proposition').show();
                checkdonateur_byname(nom,prenom);
            }

        }
        function select_donateur(id) {
            if(typeof curdonateur == 'undefined' || curdonateur == null ) {
                checkdonateur(id);
                $('#hidden_id_donateur').attr('value',id);
                $('#proposition').hide();
            } else {
                $('#id_donateur_'+curdonateur).attr('value',id);
                $('#proposition_eclate').hide();
                curdonateur = null;
            }

        }
        function close_proposition (id) {
            if(id == 1) {
                $('#proposition').hide();
            } else {
                $('#proposition_eclate').hide();
                curdonateur = null;
            }

        }
        function enable_allow_rf(){
            $('#allow_rf1').removeAttr('disabled');
            $('#allow_rf2').removeAttr('disabled');
        }
        // dons eclaté
        function add_donateur_eclate(id) {
            $('#proposition_eclate').show();
            $('#result_eclate').html(
                    '<center>'+
                            '<img id="load_data" src="{{ asset('img/ajax-loader.gif') }}" />'+
                            '</center>'
            );
            curdonateur = id;
        }
        //Generate the results
        function get_eclate_propostion(){
            var nom = $('#nom_eclate_search').val();
            var prenom = $('#prenom_eclate_search').val();
            if(nom.length != 0 || prenom.length !=0) {
                checkdonateur_byname(nom,prenom);
            }
        }
        $(document).ready(function() {

            //si un donateur qui fait référence au prospect


            var MaxInputs       = 8; //maximum input boxes allowed
            var InputsWrapper   = $("#InputsWrapper"); //Input boxes wrapper ID
            var InputsOption   = $("#InputsOption"); //Input boxes wrapper ID
            var AddButton       = $("#don_eclate"); //Add button ID


            var x = InputsWrapper.length; //initlal text box count
            {% if champs['eclate'] is defined and  champs['eclate'] > 1 %}
            x = {{ champs['eclate'] }};
            {% endif %}
            var FieldCount=1; //to keep track of text box added
            var donOption = false;
            var curdonateur = null;
            $(AddButton).click(function (e)  //on add input button click
            {
                if(x <= MaxInputs) //max input box allowed
                {
                    FieldCount++; //text box added increment
                    //add input box
                    $(InputsWrapper).append('<div>' +
                            '<a href="#" class="removeclass pull-right" tabindex="-1" ><span class="glyphicon glyphicon-remove"></span></a><br />' +
                            '<label for="montant"><label for="montant" class="required">Montant </label></label><span class="pull-right label label-info" style="font-size: 10px;"> Eclaté</span>'+
                            '<input type="text" id="montant_'+ FieldCount+'" name="montant[]" id="montant_'+ FieldCount+'" required="required" placeholder="Montant (en Euros)"  class="task_field form-control"  autocomplete="off"><br />'+
                            '<label for="code_activite"><label for="code_activite" class="required">Code Activité </label></label><span class="pull-right label label-info" style="font-size: 10px;"> Eclaté</span>'+
                            '<input type="text" id="code_activite_'+ FieldCount+'" name="code_activite[]" required="required" class="task_field form-control"  autocomplete="off"><br />'+
                        // '<label for="id_donateur"><label for="id_donateur" class="required">Numéro Donateur </label></label><span class="pull-right label label-info" style="font-size: 10px;"> Eclaté</span>'+
                        //'<div class="input-group">'+
                        //'<input type="text" id="id_donateur_'+ FieldCount+'" name="num_donateur[]" required="required" class="task_field form-control"  autocomplete="off">'+
                        //'<span class="input-group-btn">'+
                        // '<button class="btn btn-success" onclick="add_donateur_eclate('+FieldCount+')" type="button"><span class="glyphicon glyphicon-plus-sign"></span> Ajouter</button>'+
                        // '</span>'+
                        // '</div>'+
                            '<br />'+
                            '</div>');
                    x++; //text box increment
                    //  if(donOption == false) {
                    //      $(InputsOption).html('<div id="checkcol">' +
                    //              '<div class="checkbox">'+
                    //              '<label>'+
                    //              '<input type="checkbox" name="coll_don" id="coll_don" > Le collecteur est un donateur'+
                    //              '</label>'+
                    //              '</div>'+
                    //              '</div>');
                    //      donOption =true;
                    //      //Réinitialisation
                    //      $('#montant').val('');
                    //      $('#code_activite').val('');
                    //      $('#code_activite').attr('readonly','readonly');
                    //      $('#montant').attr('readonly','readonly');
                    //      $('#code_activite').attr('readonly','readonly');

                    //      $('#collecteur').append('<span class="label label-info"  >Collecteur du don éclaté </span>');
                    // }
                }
                return false;
            });

            $("body").on("click",".removeclass", function(e){ //user click on remove text
                if( x > 1 ) {
                    $(this).parent('div').remove(); //remove text box
                    x--; //decrement textbox
                    if(x == 1) {
                        // $('#checkcol').remove();
                        // $(InputsOption).html('<input type="hidden" name="coll_don" value="1" />');
                        // donOption =false;
                        // $('#montant').removeAttr('readonly');
                        // $('#code_activite').removeAttr('readonly');
                        // $('#collecteur').html('');
                    }
                }
                return false;
            })



        });
        $("body").on("click","#coll_don", function(e){
            if($('#coll_don').is(':checked')) {
                $('#montant').removeAttr('readonly');
                $('#code_activite').removeAttr('readonly');
            } else {
                $('#montant').val('');
                $('#code_activite').val('');
                $('#montant').attr('readonly','readonly');
                $('#code_activite').attr('readonly','readonly');
            }
        });
        $(document).ready(function() {
            {% if data['datamatrix'] is defined %}
            var nom = $('#fulldon_donateurbundle_saisietype_nom').val();
            var prenom = $('#fulldon_donateurbundle_saisietype_prenom').val();
            if(nom.length != 0 || prenom.length !=0) {
                $('#proposition').show();
                checkdonateur_byname(nom,prenom);
            }
            {% endif %}
        });
        //autocompletion
        function dateAutoComp(tag) {
            $(tag).keydown(function (e) {
                if(e.keyCode != 8) { // if not backspace
                    var l = $(this).val().length,
                            x = l===2||l===5?'/':'';

                    if(l>=10) return false;

                    $(this).val($(this).val()+x);
                }
            });
        }

        $(document).ready(function() {
            //autocompletion
            dateAutoComp('#date_cheque');
            dateAutoComp('#fulldon_donateurbundle_saisietype_dateNaissance');
            dateAutoComp('#date_first_pa');
            dateAutoComp('#date_fin_pa');

            $('#btn-optional').click(function (e) {
                if ($('#optionals_fields').is(":hidden")) {
                    $('#optionals_fields').show();
                    $('#btn-optional').html('<i class="fa fa-minus-square"></i>  Réduire le formulaire optionnel');
                } else {
                    $('#optionals_fields').hide();
                    $('#btn-optional').html('<i class="fa fa-plus-square"></i>  Afficher le formulaire optionnel');
                }

            });
        });
        {#$(document).ready(function() {#}
        {#$.getJSON("/villes/id/"+$("#fulldon_donateurbundle_saisietype_pays").val()).done(function( vj ) {#}
        {#var options = '';#}
        {#for (var i = 0; i < vj.length; i++) {#}
        {#options += '<option value="' + vj[i].id + '">' + vj[i].name + '</option>';#}
        {#}#}
        {#$("#ville").html(options);#}
        {#});#}
        {#$("#fulldon_donateurbundle_saisietype_pays").on('change', function(event){#}
        {#event.stopImmediatePropagation();#}
        {#$('#load_ville').html('<img id="load_villes" src="{{ asset('img/villes_load.gif') }}" />');#}

        {#$.getJSON("/villes/id/"+$(this).val()).done(function( vj ) {#}
        {#var options = '';#}
        {#for (var i = 0; i < vj.length; i++) {#}
        {#options += '<option value="' + vj[i].id + '">' + vj[i].name + '</option>';#}
        {#}#}
        {#$("#ville").html(options);#}
        {#$('#load_ville').html('');#}
        {#});#}
        {#});#}
        {#});#}
        </script>
        {% javascripts '../app/Resources/Public/js/jquery-ui/jquery-ui.js' %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}
        <script>
        var current_localite;
        var checkZipcode = $('#fulldon_donateurbundle_saisietype_zipcode').val();
        var current_cities = new Array();
        if(checkZipcode.length !=0 ) {
            callCpApi(checkZipcode, '');

        }
        function callCpApi(zipcode, pays) {

            var _urldqe = 'https://prod2.dqe-software.com/';
            var pays = 'FRA';
            var vliscence ='INTERSA12';
            var current_pays = $( "#fulldon_donateurbundle_saisietype_isopays").val();
            if(current_pays == 'FR') {
                //DQE
                $.ajax({

                    url:_urldqe+"CP/?Pays="+pays+"&CodePostal="+zipcode+"&Licence="+vliscence,

                    dataType: 'jsonp',

                    jsonp : "callback",

                    crossDomain: true,

                    jsonpCallback: "afficheCp"
                }).done(function(data) {

                        });
            }
        }
        function callAdrApi(adresse, localite) {
            var _urldqe = 'https://prod2.dqe-software.com/';
            var pays = 'FRA';
            var vliscence ='INTERSA12';
            var current_pays = $( "#fulldon_donateurbundle_saisietype_isopays").val();

            if(current_pays == 'FR') {
                //DQE
                $.ajax({
                    url:_urldqe+"ADR/?Pays="+pays+"&IDLocalite="+localite+"&Adresse="+adresse+"&Licence="+vliscence,
                    dataType: 'jsonp',
                    jsonp : "callback",
                    crossDomain: true,
                    jsonpCallback: "afficheAdr"
                }).done(function(data) { });
            }
        }
        var timeoutReference;
        var timeoutReferenceAdr;

        $('input#fulldon_donateurbundle_saisietype_zipcode').keypress(function() {
            var el = this; // copy of this object for further usage

            if (timeoutReference) clearTimeout(timeoutReference);
            timeoutReference = setTimeout(function() {
                verifycp.call(el);
            }, 3000);
        });
        $('input#fulldon_donateurbundle_saisietype_zipcode').blur(function(){
            verifycp.call(this);
        });
        $('input#fulldon_donateurbundle_saisietype_adresse3').keypress(function() {
            var el = this; // copy of this object for further usage
            $('input#fulldon_donateurbundle_saisietype_adresse3').val(normalize($('input#fulldon_donateurbundle_saisietype_adresse3').val()));
            if (timeoutReference) clearTimeout(timeoutReference);
            timeoutReference = setTimeout(function() {
                verifyAdr.call(el);
            }, 400);

        });
        $('input#fulldon_donateurbundle_saisietype_adresse3').blur(function(){
            verifyAdr.call(this);
        });
        function verifycp(){
            // we only want to execute if a timer is pending
            if (!timeoutReference){
                return;
            }
            // reset the timeout then continue on with the code
            timeoutReference = null;

            //
            // Code to execute here
            //
            var pays = $('#fulldon_donateurbundle_saisietype_isopays').val();
            var zipcode = $('#fulldon_donateurbundle_saisietype_zipcode').val();
            if(zipcode.length != 0 || pays.length !=0) {
                // ajax
                callCpApi(zipcode, pays);

            }

        }
        function verifyAdr(){
            // we only want to execute if a timer is pending
            if (!timeoutReference){
                return;
            }
            // reset the timeout then continue on with the code
            timeoutReference = null;

            //
            // Code to execute here
            //
            var adresse = $('#fulldon_donateurbundle_saisietype_adresse3').val();
            var localite = current_localite;
            if(adresse.length > 3 ) {
                // ajax
                callAdrApi(adresse,localite);

            }
        }
        var accentMap = {
            "á": "a",
            "à": "a",
            "â": "a",
            "ä": "a",
            "ç": "c",
            "é": "e",
            "è": "e",
            "ê": "e",
            "ë": "e",
            "î": "i",
            "ï": "i",
            "ô": "o",
            "ö": "o",
            "ù": "u",
            "û": "u",
            "ü": "u",
            "'": " "

        };
        var normalize = function(term){
            var ret = "";
            for(var i = 0; i < term.length; i++){
                ret += accentMap[ term.charAt(i) ] || term.charAt(i);
            }
            return ret;
        };
        function afficheCp(RtnData) {
            _listeVilleChoix = [];
            current_cities = new Array();
            var repcp = eval('('+RtnData+')');
            pos = 0;
            var resultat=new Array();
            $.each(repcp, function(nomRes,res) {
                resultat[nomRes]=res;
                _listeVilleChoix.push({label:resultat[nomRes].CodePostal+' '+resultat[nomRes].Localite+' '+resultat[nomRes].LieuDit, value:resultat[nomRes].CodePostal+''+resultat[nomRes].Localite+' '+resultat[nomRes].LieuDit, id:pos, codeville:
                        resultat[nomRes].IDLocalite, ville: resultat[nomRes].Localite, lieudit: resultat[nomRes].LieuDit, cp:
                        resultat[nomRes].CodePostal});
                pos=pos+1;

            });
            if(_listeVilleChoix.length > 1) {
                var tags =new Array();
                for(var i=0; i < _listeVilleChoix.length ; i++) {
                    tags[i] = _listeVilleChoix[i].ville.trim();
                    current_cities[_listeVilleChoix[i].ville.trim()] = _listeVilleChoix[i].codeville;
                }
                $( "#fulldon_donateurbundle_saisietype_isoville" ).autocomplete({
                    source: function( request, response ) {
                        var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( request.term ), "i" );
                        response( $.grep( tags, function( item ){
                            return matcher.test( item );
                        }) );
                    },
                    change: function() {
                        current_localite = current_cities[$(this).val().toUpperCase()];
                    }
                });
            } else {

                $( "#fulldon_donateurbundle_saisietype_isoville" ).autocomplete({source: [], change: []});
                // Afficher la ville
                current_localite = _listeVilleChoix[0].codeville;
                $('#fulldon_donateurbundle_saisietype_isoville').val(_listeVilleChoix[0].ville);

            }
        }
        function afficheAdr(RtnData) {
            $( "input#fulldon_donateurbundle_saisietype_adresse3" ).autocomplete({source: []});
            _listeAdrChoix = [];
            var tags =new Array();
            var repcp = eval('('+RtnData+')');
            pos = 0;
            var resultat=new Array();
            $.each(repcp, function(nomRes,res) {
                resultat[nomRes]=res;
                _listeAdrChoix.push({label:resultat[nomRes].CodePostal+' '+resultat[nomRes].Localite+' '+resultat[nomRes].LieuDit, value:resultat[nomRes].CodePostal+''+resultat[nomRes].Localite+' '+resultat[nomRes].LieuDit, id:pos, codeville:
                        resultat[nomRes].IDLocalite, ville: resultat[nomRes].Localite, lieudit: resultat[nomRes].LieuDit, cp:
                        resultat[nomRes].CodePostal, adr: resultat[nomRes].Numero +" "+resultat[nomRes].Voie});
                pos=pos+1;
            });
            if(_listeAdrChoix.length >= 1) {

                for(var i=0; i < _listeAdrChoix.length ; i++) {
                    tags[i] = _listeAdrChoix[i].adr.trim();
                }
                $( "input#fulldon_donateurbundle_saisietype_adresse3" ).autocomplete({
                    source: function( request, response ) {
                        var matcher = new RegExp( $.ui.autocomplete.escapeRegex( request.term ), "i" );
                        response( $.grep( tags, function( value ) {
                            value = value.label || value.value || value;
                            return matcher.test( value ) || matcher.test( normalize( value ) );
                        }) );
                    }
                });

            }
        }

        </script>
    {% endblock %}